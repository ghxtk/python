//Циклы. Косинус произведения
//Дана последовательность вещественных чисел Ai, в которой первый член неотрицателен, а также присутствует хотя бы один член, меньший нуля. 
//Необходимо найти косинус произведения всех
//элементов последовательности, предшествующих первому отрицательному члену. Пусть n - номер первого отрицательного члена последовательности. 
//Тогда вы должны вычислить:
//S=cos(A1⋅A2⋅...⋅An−1)

import math

num = 1
with open("input.txt", "r") as in_f:
    with open("output.txt", "w") as out_f:
        for line in in_f:
            if float(line.rstrip()) >= 0:
                num *= float(line.rstrip())
            else:
                out_f.write(f"{math.cos(num):.7f}")
                exit(0)
               
//Количество чисел по количеству пар
Известно, что имея n различных чисел можно n⋅(n−1)/2 способами выбрать из них пару различных чисел (порядок в паре не имеет значение).
По заданному количеству пар m=n⋅(n−1)/2 найдите количество чисел n.
   
import math
a = 1
b = -1
c = -2*int(input()) 
 
discr = b ** 2 - 4 * a * c
 
if discr > 0:
    x1 = (-b + math.sqrt(discr)) / (2 * a)
    x2 = (-b - math.sqrt(discr)) / (2 * a)
    if x1 > 1:
        print(int(x1))
    else:
        print(int(x2))
elif discr == 0:
    x = -b / (2 * a)
    print(int(x))
    
//Корни квадратного уравнения
//Квадратное уравнение A⋅x^2+B⋅x+C=0 задано своими коэффициентами. Гарантируется, что A≠0 и уравнение имеет ровно два различных корня x1 и x2.
//Гарантируется, что корни целочисленны. Выведите оба корня в произвольном порядке в целочисленном виде.

import math
a = int(input())
b = int(input())
c = int(input()) 
 
discr = b ** 2 - 4 * a * c
 
if discr > 0:
    x1 = int((-b + math.sqrt(discr)) / (2 * a))
    x2 = int((-b - math.sqrt(discr)) / (2 * a))
    print(x1, x2)
elif discr == 0:
    x = int(-b / (2 * a))
    print(x)
else:
    print("Корней нет")
    
//Рекурсивные подпрограммы. Задача 4
//Написать рекурсивную подпрограмму, вычисляющую значение функции
//X(N)=N/sqrt(1+sqrt(2+sqrt(3+...+sqrt(N)
//С помощью данной подпрограммы вычислить значение X(N) для заданного N.   

import math
 
num = int(input())
s = 0
for i in range(num, 0, -1):
    s = math.sqrt(i + s)
ans = num/s
print(f"{ans:.6f}")

//Линейные алгоритмы. Задача 3.4
//Найти площадь кольца S с внутренним радиусом r и внешним радиусом R (0<r≤R).

import math
R = float(input())
r = float(input())
SR = math.pi * pow(R,2)
Sr = math.pi * pow(r,2)
ans = abs(SR - Sr)
print("%.6f" % ans)

//Процедуры и функции. Задача 8
//Дано N натуральных чисел. Найдите их наибольший общий делитель, используя алгоритм Евклида и учитывая, что НОД(a,b,c)=НОД(НОД(a,b),c). 
//Определите подпрограмму для расчета наибольшего общего делителя двух натуральных чисел, используя алгоритм Евклида.

def gcd(a, b):
    while a != b:
        if a > b:
            a = a - b
        else:
            b = b - a        
    return a
 
size = int(input())
str = input()
array = [int(x) for x in str.split()]
for i in range(size):
    for j in range(size-1):
        array[j] = gcd(array[j],array[j+1])
print(min(array))

//Линейные алгоритмы. Задача 1.8
//Написать программу, которая вычисляет значение выражения 1+e^(y−1)/(1+x^2⋅|y−tgx|).

import math
x,y = map(float,input().split())
ans = eval("(1 + pow(math.e,y-1)) / (1+pow(x,2)*abs(y-math.tan(x)))")
print("%.4f" % ans)

//Линейные алгоритмы. Задача 1.20
//Написать программу, которая вычисляет значение выражения
//ln|(y−sqrt(|x|))⋅(x−y/(x+(x^2/4))|

import math
x,y = map(float,input().split())
ans = math.log( abs( (y-math.sqrt(abs(x))) * (x - (y/(x + (x**2/4) ) ) ) ) )
print("%.4f" % ans)
