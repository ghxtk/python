//Задание 1. Анализ результатов ОГЭ
1. Общая статистика (количество, минимальный, максимальный, среднее, медиана, мода, среднеквадратическое отклонение).
2. Статистика количества сдававших и оценок по видам школ (СОШ, гимназия, лицей и т.д.), гистограмма.
3. Статистика количества сдававших и оценок по районам, гистограмма.
4. 10 лучших школ (не учитывать школы, из которых участвовало менее 10 учеников).
5. 10 худших школ.
6. Проверка гипотезы: зависимость результатов от удалённости от областного центра.
7.* Проверка гипотезы: зависимость результатов от размера населённого пункта, в котором расположено образовательное учреждение (по численности населения). 
В качестве ответа отправьте ссылку на ноутбук (предварительно открыв доступ).

https://colab.research.google.com/drive/1vwkGSFINzm-cIMroPKN1DIOQzRwlsSFD?usp=sharing

//Задание 2. Предсказание результатов ОГЭ
Задача - предсказывать оценки для новых участников (или восстанавливать утерянные).
Разбить данные на две группы, случайным образом отделив 10% (бОльшая группа - тренировочный набор, меньшая - проверочный набор).
Обработать тренировочные данные, сохранив информацию, необходимую для предсказания оценок. 
Используем следующие гипотезы: h0 средняя оценка по всем участникам, h1 медиана по той школе, из которой ученик, h2 мода по всем школам этого типа.
Предсказать с помощью каждой гипотезы оценки всех учеников из проверочного набора.
Рассчитать точность результатов предсказаний с помощью двух метрик: 
1) процент правильных угадываний 
2) ошибочный балл на человека - суммарное абсолютное расхождение в баллах делённое на количество угадываний.
Усреднить результаты, повторив пункты 1-4 несколько раз для каждого способа.
Придумать свой способ, повторить для него пункты 1-5, он должен быть лучше, чем способ номер h0.
Предположить, почему так всё плохо, какие данные помогли бы предсказывать лучше, какие из них реально получить.

https://colab.research.google.com/drive/1GynqTUgAt6Sncg6eerwScAcWHeZbyfja?usp=sharing

//Задание 3. Классификация вручную
Вам дана таблица данных в формате CSV,  данные в строчках разделены символом «точка-с-запятой». 
Файл создан департаментом сельского хозяйства США и в нём указаны продукты и содержание в них некоторых витаминов, минералов, а также калорийность на единицу массы.
Вам необходимо:
Понять, как устроены эти данные. Посчитать общую статистику.
Придумать логичный способ разделения этих продуктов на две части, то есть самим вручную создать "бинарный классификатор". Визуализировать результат разбиения. 
Придумать способ разделения на несколько классов. Визуализировать и прокомментировать результат.
* Проанализировать данные. Найти какую-либо зависимость одного параметра от другого.

https://colab.research.google.com/drive/1qhiptliuT-HGtU9dx8m0R1mppJgo-H4m?usp=sharing

//Задание 4. Классификация методом k-ближайших соседей
Реализуйте метод k-ближайших соседей (сами).
В качестве размеченных данных возьмите
1) свои собственные разбиения из прошлого задания
2) разбиения одногруппника из прошлого задания (разбейтесь на пары)
3) вот это разбиение http://school.sgu.ru/mod/resource/view.php?id=11316 (метки классов в столбце CLASS)
Используйте различные наборы признаков и разные метрики расстояния:
1) евклидово расстояние между векторами без нормализации
2) манхэттенское расстояние без нормализации
3) евклидово расстояние с нормализацией
4) манхэттенское расстояние с нормализацией
5) введите бинарные признаки (например, "есть железо"-"нет железа")
6) оставьте только N признаков (перебирая все N-ки, если же это слишком долго, многократно повторяя выбор случайных N признаков)
N тоже нужно подобрать (но можно попросить у автора разбиения подсказку, сколько признаков он задействовал для создания своего разбиения, 
например, в выложенном выше файле использовано два столбца исходной таблицы)
7) подберите количество соседей - k
Используйте кросс-валидацию, а для оценки точности возьмите f-меру.
Повторите процесс с использованием библиотеки.

https://colab.research.google.com/drive/1WU7N3nq3yEstmNNLTYVVCuZHIygheZG-?usp=sharing

//Задание 5. Деревья решений и сравнение результатов классификации
1. Использовать деревья решений для классификации данных из предыдущего задания (своих, товарища и представленных в задании). 
Проверить, приведёт ли нормализация или замена части признаков бинарными к улучшению результатов.
Также построить деревья на части признаков, перебирая все N'ки или выбирая N признаков случайным образом. 
Вывести в каком-либо удобочитаемом виде содержимое узлов "лучших" из построенных деревьев.
2. Использовать метод k-ближайших соседей и деревья решений для предсказания оценок ОГЭ (из задания 2).
3. Сделать выводы о преимуществах и недостатках рассмотренных методов классификации как в общем, так и применительно к рассмотренным задачам.
4. * Реализовать дерево решений вручную.

https://colab.research.google.com/drive/1Ipe_XHR-eNFHTCg0-YuhTKhY7_R0I6Rc?usp=sharing

//Задание 6. Регрессия
У вас есть данные о физико-химических свойствах красных и белых вин и их качестве (будем восстанавливать качество по характеристикам).
1. Обучите линейную регрессию на красных винах. Распечатайте среднеквадратическое отклонение на обучающей и тестовой выборках.
2. Снова обучите линейную регрессию на красных винах, но предварительно нормализуйте данные.
3. Повторите пункт 2 на белых винах, сравните результаты. Визуализируйте.
4. Обучите дерево решений для классификации белых вин. Используйте кросс-валидацию. Визуализируйте результаты.
5. Обучите дерево решений для регрессии на белых винах. Используйте кросс-валидацию. Визуализируйте результаты.
6. Сравните результаты пунктов 4 и 5.
7. Проверьте работу дерева регрессии, обученного на белых винах, на данных красных вин. Можно ли сделать какой-то вывод из полученного результата?

https://colab.research.google.com/drive/1FtruhWPhvGvgKZstrX13Dx0KkYcQrNbD?usp=sharing

//Задание 7. Кластеризация продуктов
Вам дана уже знакомая таблица данных в формате CSV,  данные в строчках разделены символом «точка-с-запятой». 
Файл создан департаментом сельского хозяйства США и в нём указаны продукты и содержание в них некоторых витаминов, минералов, а также калорийность на единицу массы.
Вам необходимо:
Произвести уменьшение размерности данных.
Кластеризовать данные как минимум двумя способами.
Визуализировать результаты кластеризации.
Провести анализ полученных результатов, в том числе сравнить выбранные способы кластеризации.
* Подобрать способ уменьшения размерности для лучшего результата кластеризации.

https://colab.research.google.com/drive/1py9YOuc9_ZtieWvT6KujSsbtKxckwHNk?usp=sharing

//Задание 8. Кластеризация точек
Сгенерируйте несколько датасетов, состоящих из точек на плоскости по аналогии с этим примером из документации или вручную:
1) в виде двух параллельных отрезков,
2) в виде "восьмёрки" (две касающиеся окружности),
3) в виде отрезка, пересекающего два круга (или "пятна"),
4) свой вариант.
Количество точек не менее 1000. 
Для каждого набора точек выбрать пару алгоритмов с хорошо интерпретируемыми, но различными результатами и алгоритм с "плохим" разбиением, объяснить результаты.

https://colab.research.google.com/drive/1XNOh0-EujYgzAhyNm6V6OrXJlJO7t0kt?usp=sharing

//Задание 9. Кластеризация текстов
Возьмите набор данных Book Genre Prediction с Kaggle.
0) Изучите и опишите его: какие данные представлены, есть ли пропуски, равномерно ли распределены книги по жанрам, одинаковая ли длина кратких содержаний и т.п.
1) Проведите предобработку данных. Подготовьте данные для кластеризации (используем только колонку "summary") по принципу "мешка слов" двумя способами:
а) подсчётом вхождений слов (CountVectorizer)
б) с использованием меры tf – idf (TfidfVectorizer)
Извлечение текстовых признаков (scikit-learn)
2) Кластеризуйте оба представления методом k-средних на 10 кластеров (по числу исходных жанров), 
уменьшите размерность с помощью метода главных компонент (PCA) и визуализируйте разбиение. 
Оцените результаты с помощью силуэтной метрики (silhouette_score) и визуально.
Пересекается ли полученное разбиение с жанрами? Можно ли найти другое объяснение полученным кластерам?
3) Возьмите две другие метрики оценки качества кластеризации, для каждой подберите способ кластеризации и параметры, 
дающие наилучшее значение. Используя подобранные методы и параметры, проведите кластеризацию, 
визуализируйте результаты и оцените их в том числе с точки зрения интерпретируемости.

https://colab.research.google.com/drive/1jboLvxyliUINKOA4a8Y_Efsq1SbIXKTw?usp=sharing

//Задание 10. Нейросеть и классификация цифр
Изучите возможности классификации с помощью многослойного персептрона MLPClassifier.
Используя наборы данных с цифрами:
а) небольшой встроенный набор, загружаемый с помощью
X, y = datasets.load_digits(return_X_y=True)
и
б) MNIST, его можно загрузить по-разному, например, как в этом примере:
X, y = fetch_openml("mnist_784", version=1, return_X_y=True, as_frame=False)
продемонстрируйте:
1) обучение и работу многоклассовой классификации,
2) бинарной классификации на чётные и нечётные цифры,
3) бинарной классификации на '0' и остальные цифры (приведите примеры, когда классификатор ошибается),
4) проиллюстрируйте советы по использованию (например, для первого совета можно на маленьком наборе цифр сравнить результаты без нормализации,
с использованием MinMaxScaler и с использованием StandardScaler).

https://colab.research.google.com/drive/1fLutdNlkHzmfR8zTHRYV5yN61ZpdjoKh?usp=sharing

//Задание 11. Нейросеть и регрессия на бриллиантах
Возьмите набор данных о бриллиантах с Kaggle.
Исследуйте и опишите датасет. Проведите предварительную обработку, рассмотрите несколько вариантов, например, удаление или кодирование категориальных признаков.
Создайте и обучите MLPRegressor для предсказания цен. Сравните с другими регрессиями, в т.ч. c SGDRegressor. Оцените влияние предварительной обработки.

https://colab.research.google.com/drive/1yhyV9ltGEPeiA-eZWZYqli4nIbzELB7Y?usp=sharing
