import numpy as np

a = np.random.randint(-100, 100, size=(4, 9))
print("матрица размером 4 × 9, заполненная целыми числами")
print (a)

//матрица размером 4 × 9, заполненная целыми числами
[[-41 -55 -68 -41  32 -27  45  32  27]
 [-24  56 -90  29 -18 -45 -92 -20  54]
 [-64 -73 -60 -18  22 -25 -84  15 -75]
 [-20  53  -6   3  47 -46 -36 -33  91]]
 
print("Вывести на экран элемент с индексами [2, 6]")
print (a[2, 6])

print("Вывести на экран каждый второй элемент третьей строки матрицы")
print(a[2, 1::2])

//Вывести на экран элемент с индексами [2, 6]
//-84
//Вывести на экран каждый второй элемент третьей строки матрицы
//[-73 -18 -25  15]

print("Вывести на экран элементы последнего столбца в обратном порядке")
print(a[::-1, -1])

//Вывести на экран элементы последнего столбца в обратном порядке
//[ 91 -75  54  27]

print("Изменить форму матрицы с 4 × 9 на 6 × 6")
d = a.reshape(6, 6)
print(d)

//Изменить форму матрицы с 4 × 9 на 6 × 6
[[-41 -55 -68 -41  32 -27]
 [ 45  32  27 -24  56 -90]
 [ 29 -18 -45 -92 -20  54]
 [-64 -73 -60 -18  22 -25]
 [-84  15 -75 -20  53  -6]
 [  3  47 -46 -36 -33  91]]
 
n = int(input("Введите степень "))
a_new = np.power(a, n)
print("Возвести каждый элемент матрицы в заданную степень")
print(a_new)

//Введите степень 2
//Возвести каждый элемент матрицы в заданную степень
[[1681 3025 4624 1681 1024  729 2025 1024  729]
 [ 576 3136 8100  841  324 2025 8464  400 2916]
 [4096 5329 3600  324  484  625 7056  225 5625]
 [ 400 2809   36    9 2209 2116 1296 1089 8281]]
 
#кв матрица
c = np.min(np.diag(d))
print("Найти минимум на главной диагонали")
print(c)

//Найти минимум на главной диагонали
//-45

#первоначальная матрица
mx = np.max(a[:, -2])
print("Найти максимальный элемент в предпоследнем столбце")
print(mx)

//Найти максимальный элемент в предпоследнем столбце
//32

#первоначальная матрица
print("Определить, образуют ли элементы сжатого до одной оси массива невозрастающую последовательность.")
a_new = np.ravel(a, order='C')
print(a_new)
error = 0
for i in range(a_new.size - 1):
  if (a_new[i] < a_new[i+1]):
    error += 1
if (error == 0):
  print("true")
else:
    print("false")
    
//Определить, образуют ли элементы сжатого до одной оси массива невозрастающую последовательность.
[-41 -55 -68 -41  32 -27  45  32  27 -24  56 -90  29 -18 -45 -92 -20  54
 -64 -73 -60 -18  22 -25 -84  15 -75 -20  53  -6   3  47 -46 -36 -33  91]
//false

#кв матрица
print("Подсчитать произведение ненулевых элементов на побочной диагонали.")
d_new = [d[i][-i-1] for i in range(len(d))]
print(d_new)
multiply = 1
for i in range(len(d_new)):
  if (d_new[i] != 0):
    multiply *= d_new[i]
print(multiply)

//Подсчитать произведение ненулевых элементов на побочной диагонали.
//[-27, 56, -92, -60, 15, 3]
//-375580800
